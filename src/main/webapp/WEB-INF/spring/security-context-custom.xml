<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
    
    <!-- 검사 URL -->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login/loginForm" access="permitAll" />
        <intercept-url pattern="/" access="permitAll" /> <!-- 루트로 들어오면 모든 권한 -->
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" /> <!-- admind으로 들어오는 뒤의 어떤 경로는 admin권한 --> 
        <intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" /> <!-- 모든 경로는 user, admin 권한 -->
        
        <form-login login-page="/login/loginForm"
                    default-target-url="/"
                    authentication-failure-url="/login/loginForm?error"
                    username-parameter="id"
                    password-parameter="password" />
        
         <logout logout-url="/logout"
                logout-success-url="/" /> <!--  로그아웃 성공하면 /로 --> 
                
        <access-denied-handler error-page="/security/accessDenied" />
    </http>    
    
    <!-- <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> 암호화 -->
         
   <!--   <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean> -->
    <beans:bean id="customNoOpPasswordEncoder" class="edu.kosmo.ex.security.CustomNoOpPasswordEncoder"/>  <!--edu.kosmo.ex.security. 객체생성 -->
    <beans:bean id="customUserDetailsService" class="edu.kosmo.ex.security.CustomUserDetailsService"/> 
    
    <!-- BLAKE 7698 -->
    <!--  provider  -->
      <authentication-manager>
        <authentication-provider user-service-ref="customUserDetailsService">
        <password-encoder ref="customNoOpPasswordEncoder"/> 
<!--         <jdbc-user-service 
            data-source-ref="dataSource"
         users-by-username-query="select ename, empno, 1  from emp where ename = ?"
           authorities-by-username-query="select ename,case when job='MANAGER' then 'ROLE_ADMIN' else  'ROLE_USER' end authority from emp where ename=?"            
        /> -->
        </authentication-provider>
    </authentication-manager> 
    
<!--    <authentication-manager>
        <authentication-provider>
        <jdbc-user-service 
            data-source-ref="dataSource"
         />
        </authentication-provider>
    </authentication-manager> -->
   
</beans:beans>